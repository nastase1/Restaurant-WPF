// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantComenzi.Data;

#nullable disable

namespace Restaurant.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250521050323_AdaugaTipContSiSeedAngajat")]
    partial class AdaugaTipContSiSeedAngajat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantComenzi.Models.Alergen", b =>
                {
                    b.Property<int>("AlergenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlergenID"));

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AlergenID");

                    b.ToTable("Alergeni");

                    b.HasData(
                        new
                        {
                            AlergenID = 1,
                            Denumire = "Lactate"
                        },
                        new
                        {
                            AlergenID = 2,
                            Denumire = "Gluten"
                        },
                        new
                        {
                            AlergenID = 3,
                            Denumire = "Nuci"
                        });
                });

            modelBuilder.Entity("RestaurantComenzi.Models.AlergenPreparat", b =>
                {
                    b.Property<int>("AlergenID")
                        .HasColumnType("int");

                    b.Property<int>("PreparatID")
                        .HasColumnType("int");

                    b.HasKey("AlergenID", "PreparatID");

                    b.HasIndex("PreparatID");

                    b.ToTable("AlergeniPreparate");

                    b.HasData(
                        new
                        {
                            AlergenID = 1,
                            PreparatID = 1
                        },
                        new
                        {
                            AlergenID = 2,
                            PreparatID = 2
                        },
                        new
                        {
                            AlergenID = 1,
                            PreparatID = 3
                        },
                        new
                        {
                            AlergenID = 3,
                            PreparatID = 3
                        },
                        new
                        {
                            AlergenID = 1,
                            PreparatID = 4
                        },
                        new
                        {
                            AlergenID = 1,
                            PreparatID = 6
                        },
                        new
                        {
                            AlergenID = 2,
                            PreparatID = 6
                        },
                        new
                        {
                            AlergenID = 1,
                            PreparatID = 8
                        },
                        new
                        {
                            AlergenID = 1,
                            PreparatID = 9
                        },
                        new
                        {
                            AlergenID = 2,
                            PreparatID = 9
                        },
                        new
                        {
                            AlergenID = 1,
                            PreparatID = 10
                        },
                        new
                        {
                            AlergenID = 2,
                            PreparatID = 10
                        });
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Categorie", b =>
                {
                    b.Property<int>("CategorieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategorieID"));

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategorieID");

                    b.ToTable("Categorii");

                    b.HasData(
                        new
                        {
                            CategorieID = 1,
                            Denumire = "Aperitive"
                        },
                        new
                        {
                            CategorieID = 2,
                            Denumire = "Fel Principal"
                        },
                        new
                        {
                            CategorieID = 3,
                            Denumire = "Deserturi"
                        });
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Comanda", b =>
                {
                    b.Property<int>("ComandaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComandaID"));

                    b.Property<string>("CodComanda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContUtilizatorID")
                        .HasColumnType("int");

                    b.Property<decimal>("CostMancare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostTransport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataComanda")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OraEstimativaLivrare")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComandaID");

                    b.HasIndex("ContUtilizatorID");

                    b.ToTable("Comenzi");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.ComandaPreparat", b =>
                {
                    b.Property<int>("ComandaID")
                        .HasColumnType("int");

                    b.Property<int>("PreparatID")
                        .HasColumnType("int");

                    b.Property<int>("Bucati")
                        .HasColumnType("int");

                    b.HasKey("ComandaID", "PreparatID");

                    b.HasIndex("PreparatID");

                    b.ToTable("ComenziPreparate");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.ContUtilizator", b =>
                {
                    b.Property<int>("ContUtilizatorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContUtilizatorID"));

                    b.Property<string>("AdresaEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresaLivrare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumarTelefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TipCont")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ContUtilizatorID");

                    b.ToTable("ConturiUtilizatori");

                    b.HasData(
                        new
                        {
                            ContUtilizatorID = 2,
                            AdresaEmail = "angajat@restaurant.com",
                            AdresaLivrare = "Adresa Restaurantului",
                            NumarTelefon = "0000000000",
                            Nume = "Angajat",
                            Parola = "restaurant",
                            Prenume = "Restaurant",
                            TipCont = "Angajat"
                        });
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Meniu", b =>
                {
                    b.Property<int>("MeniuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeniuID"));

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountProcent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ListaFotografii")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeniuID");

                    b.HasIndex("CategorieID");

                    b.ToTable("Meniuri");

                    b.HasData(
                        new
                        {
                            MeniuID = 1,
                            CategorieID = 1,
                            Denumire = "Meniu Dejun",
                            Descriere = "Bruschete + Cafea",
                            DiscountProcent = 10m,
                            ListaFotografii = "../Images\\meniuDejun.jpg"
                        },
                        new
                        {
                            MeniuID = 2,
                            CategorieID = 2,
                            Denumire = "Meniu Romantic",
                            Descriere = "Pizza + Tiramisu",
                            DiscountProcent = 15m,
                            ListaFotografii = "../Images\\meniuRomantic.jpg"
                        },
                        new
                        {
                            MeniuID = 3,
                            CategorieID = 2,
                            Denumire = "Meniu Vegetarian",
                            Descriere = "Ciorbă + Omletă + Salată",
                            DiscountProcent = 12m,
                            ListaFotografii = "../Images\\meniuVegetarian.jpg"
                        },
                        new
                        {
                            MeniuID = 4,
                            CategorieID = 2,
                            Denumire = "Meniu Copii",
                            Descriere = "Pizza + Clătite",
                            DiscountProcent = 10m,
                            ListaFotografii = "../Images\\meniuCopii.jpg"
                        },
                        new
                        {
                            MeniuID = 5,
                            CategorieID = 2,
                            Denumire = "Meniu Fitness",
                            Descriere = "Pui + Salată",
                            DiscountProcent = 8m,
                            ListaFotografii = "../Images\\meniuFitness.jpg"
                        },
                        new
                        {
                            MeniuID = 6,
                            CategorieID = 3,
                            Denumire = "Meniu Dulce",
                            Descriere = "Tiramisu + Cheesecake",
                            DiscountProcent = 15m,
                            ListaFotografii = "../Images\\meniuDulce.jpg"
                        });
                });

            modelBuilder.Entity("RestaurantComenzi.Models.MeniuPreparat", b =>
                {
                    b.Property<int>("MeniuID")
                        .HasColumnType("int");

                    b.Property<int>("PreparatID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cantitate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MeniuID", "PreparatID");

                    b.HasIndex("PreparatID");

                    b.ToTable("MeniuPreparate");

                    b.HasData(
                        new
                        {
                            MeniuID = 1,
                            PreparatID = 1,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 2,
                            PreparatID = 2,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 2,
                            PreparatID = 3,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 3,
                            PreparatID = 4,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 3,
                            PreparatID = 5,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 3,
                            PreparatID = 8,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 4,
                            PreparatID = 2,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 4,
                            PreparatID = 10,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 5,
                            PreparatID = 7,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 5,
                            PreparatID = 8,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 6,
                            PreparatID = 3,
                            Cantitate = 1m
                        },
                        new
                        {
                            MeniuID = 6,
                            PreparatID = 9,
                            Cantitate = 1m
                        });
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Preparat", b =>
                {
                    b.Property<int>("PreparatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreparatID"));

                    b.Property<decimal>("CantitatePortie")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("CantitateTotala")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ListaFotografii")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("PreparatID");

                    b.HasIndex("CategorieID");

                    b.ToTable("Preparate");

                    b.HasData(
                        new
                        {
                            PreparatID = 1,
                            CantitatePortie = 150m,
                            CantitateTotala = 4500m,
                            CategorieID = 1,
                            Denumire = "Bruschete",
                            ListaFotografii = "../Images\\bruschete.jpg",
                            Pret = 12.50m
                        },
                        new
                        {
                            PreparatID = 4,
                            CantitatePortie = 200m,
                            CantitateTotala = 6000m,
                            CategorieID = 1,
                            Denumire = "Omletă cu legume",
                            ListaFotografii = "../Images\\omleta.jpg",
                            Pret = 18.00m
                        },
                        new
                        {
                            PreparatID = 8,
                            CantitatePortie = 250m,
                            CantitateTotala = 7500m,
                            CategorieID = 1,
                            Denumire = "Salată Caesar",
                            ListaFotografii = "../Images\\salata.jpg",
                            Pret = 22.00m
                        },
                        new
                        {
                            PreparatID = 2,
                            CantitatePortie = 350m,
                            CantitateTotala = 10500m,
                            CategorieID = 2,
                            Denumire = "Pizza Margherita",
                            ListaFotografii = "../Images\\pizza.jpg",
                            Pret = 28.00m
                        },
                        new
                        {
                            PreparatID = 5,
                            CantitatePortie = 300m,
                            CantitateTotala = 9000m,
                            CategorieID = 2,
                            Denumire = "Ciorbă de legume",
                            ListaFotografii = "../Images\\ciorba.jpg",
                            Pret = 14.00m
                        },
                        new
                        {
                            PreparatID = 6,
                            CantitatePortie = 350m,
                            CantitateTotala = 7000m,
                            CategorieID = 2,
                            Denumire = "Paste Carbonara",
                            ListaFotografii = "../Images\\paste.jpg",
                            Pret = 32.00m
                        },
                        new
                        {
                            PreparatID = 7,
                            CantitatePortie = 200m,
                            CantitateTotala = 6000m,
                            CategorieID = 2,
                            Denumire = "Pui la grătar",
                            ListaFotografii = "../Images\\pui.jpg",
                            Pret = 27.00m
                        },
                        new
                        {
                            PreparatID = 3,
                            CantitatePortie = 150m,
                            CantitateTotala = 4500m,
                            CategorieID = 3,
                            Denumire = "Tiramisu",
                            ListaFotografii = "../Images\\tiramisu.jpg",
                            Pret = 15.00m
                        },
                        new
                        {
                            PreparatID = 9,
                            CantitatePortie = 120m,
                            CantitateTotala = 3600m,
                            CategorieID = 3,
                            Denumire = "Cheesecake",
                            ListaFotografii = "../Images\\cheesecake.jpg",
                            Pret = 17.00m
                        },
                        new
                        {
                            PreparatID = 10,
                            CantitatePortie = 180m,
                            CantitateTotala = 5400m,
                            CategorieID = 3,
                            Denumire = "Clătite cu ciocolată",
                            ListaFotografii = "../Images\\clatite.jpg",
                            Pret = 16.00m
                        });
                });

            modelBuilder.Entity("RestaurantComenzi.Models.AlergenPreparat", b =>
                {
                    b.HasOne("RestaurantComenzi.Models.Alergen", "Alergen")
                        .WithMany("AlergeniPreparate")
                        .HasForeignKey("AlergenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantComenzi.Models.Preparat", "Preparat")
                        .WithMany("AlergeniPreparate")
                        .HasForeignKey("PreparatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alergen");

                    b.Navigation("Preparat");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Comanda", b =>
                {
                    b.HasOne("RestaurantComenzi.Models.ContUtilizator", "ContUtilizator")
                        .WithMany("Comenzi")
                        .HasForeignKey("ContUtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContUtilizator");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.ComandaPreparat", b =>
                {
                    b.HasOne("RestaurantComenzi.Models.Comanda", "Comanda")
                        .WithMany("ComenziPreparate")
                        .HasForeignKey("ComandaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantComenzi.Models.Preparat", "Preparat")
                        .WithMany("ComenziPreparate")
                        .HasForeignKey("PreparatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Preparat");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Meniu", b =>
                {
                    b.HasOne("RestaurantComenzi.Models.Categorie", "Categorie")
                        .WithMany("Meniuri")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.MeniuPreparat", b =>
                {
                    b.HasOne("RestaurantComenzi.Models.Meniu", "Meniu")
                        .WithMany("MeniuPreparate")
                        .HasForeignKey("MeniuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantComenzi.Models.Preparat", "Preparat")
                        .WithMany("MeniuPreparate")
                        .HasForeignKey("PreparatID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Meniu");

                    b.Navigation("Preparat");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Preparat", b =>
                {
                    b.HasOne("RestaurantComenzi.Models.Categorie", "Categorie")
                        .WithMany("Preparate")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Alergen", b =>
                {
                    b.Navigation("AlergeniPreparate");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Categorie", b =>
                {
                    b.Navigation("Meniuri");

                    b.Navigation("Preparate");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Comanda", b =>
                {
                    b.Navigation("ComenziPreparate");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.ContUtilizator", b =>
                {
                    b.Navigation("Comenzi");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Meniu", b =>
                {
                    b.Navigation("MeniuPreparate");
                });

            modelBuilder.Entity("RestaurantComenzi.Models.Preparat", b =>
                {
                    b.Navigation("AlergeniPreparate");

                    b.Navigation("ComenziPreparate");

                    b.Navigation("MeniuPreparate");
                });
#pragma warning restore 612, 618
        }
    }
}
